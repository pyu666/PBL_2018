public class A {
    int i;
    public A(int i){
        this.i = i;
    }
    public int getValue(){
        return this.i;
    }
    @Override
    public A clone(){
        return null;
    }
}
public class B implements Cloneable{

    int i;
    public B(int i){
        this.i = i;

    }
    public int getValue(){
        return this.i;
    }
    public B clone(){
        B b = null;
        try {
            b = (B)super.clone();
        } catch(CloneNotSupportedException e) {
            e.printStackTrace();
        }
        return b;
    }
}
public class C implements Cloneable{
    B b = null;
    public C (int i){
        this.b = new B(i);
    }
    public int getValue(){
        return this.b.getValue();
    }
    public C clone(){
        C c = null;
        try {
            c = this.getClass().cast(super.clone());
            c.b = this.b.clone();
        } catch(CloneNotSupportedException e) {
            e.printStackTrace();
        }
        return c;
    }

}
public enum Gender{
    MALE,FEMALE
}


    // public class Gender{
    // public final static Gender MALE = new Gender(){
    //     @Override
    //     public String toString(){
    //         return "íjê´";
    //     }
    // };
    // public final static Gender FEMALE = new Gender(){
    //     @Override
    //     public String toString(){
    //         return "èóê´";
    //     }
    // };
// }
public class HelloPrinter implements MyPrinter {
public HelloPrinter(){

}
@Override
  public void print(){
    System.out.println("Hello World");
  }
}
import java.util.Optional;

public class Human {
    private String name;
    private String nickName;

    public Human(String name,String nickName){
      this.name = name;
      this.nickName = nickName;
    }
    public String getName(){
      return this.name;
    }
    public Optional<String> getnickName(){
      // return this.nickName;
      return Optional.ofNullable(this.nickName);
    }
}
import java.util.List;
import java.util.Arrays;

import java.util.List;
import java.util.Arrays;

public class Main4_1{
  public static void main(String[] args) {
    List<Human> humanList = Arrays.asList(
        new Human("ëÂã¥","ÇØÇÒÇ¢Çø"),
        new Human("í|Émì‡","ÇÃÇ§Çø"),
        new Human("ìcéq",null)
            );

    for (int i = 0; i< humanList.size() ;i++) {
        Human human = humanList.get(i);
        // if (human.getnickName() != null) {
        //     System.out.println(human.getnickName());
        //}
        System.out.println(human.getName() + "ÇÃÇ†ÇæñºÇÕ" +human.getnickName().orElse("Ç»Ç¢")+"Ç≈Ç∑ÅB");

    }
  }
}
public class Member implements Comparable<Member> {
  private String id;
  private String name;
  private Gender gender;

  public Member(String id, String name,Gender gender){
    this.id = id;
    this.name = name;
    this.gender = gender;
  }
  public String getId(){
    return this.id;
  }
  public String getName(){
    return this.name;
  }
  public Gender getGender(){
    return this.gender;
  }
  @Override
  public String toString(){
      return this.getId()+ " " + this.getName() + " " +this.getGender();
  }
  @Override
  public int compareTo(Member member1){
      return this.getId().compareTo(member1.getId());
  }
}
import java.util.Comparator;
public class MyComparator implements Comparator<String>{
  public int compare(String number1,String number2){
  int a = Integer.parseInt(number1);
  int b = Integer.parseInt(number2);
  return a - b;
  }
}
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class MyList{
  private List<Integer> list = new ArrayList<>();
  {
    this.list.add(3);
    this.list.add(2);
    this.list.add(1);
  }
  public Iterator<Integer> iterator(){
    return this.list.iterator();
  }
}
import java.util.ArrayList;
import java.util.List;
import java.util.Iterator;

public class MyList2 implements Iterable<Integer>{
  private List<Integer> list = new ArrayList<>();
  {
    this.list.add(3);
    this.list.add(2);
    this.list.add(1);
  }
  @Override
public Iterator<Integer> iterator(){
  return this.list.iterator();
}
}
import java.util.Iterator;
import java.util.NoSuchElementException;
public class MyList3 implements Iterable<Integer>{
    private Integer[] list = {3,2,1};

    @Override
    public Iterator<Integer> iterator(){
      Iterator<Integer> iterator = new Iterator<Integer>(){
        private int i = 0;
        public boolean hasNext(){
//          return this.i < MyList3.this.list.length ? true : false;
           if (i < list.length) {
             return true;
          }else{
            return false;
          }

        }
        public Integer next(){
//          int p = MyList3.this.list[i];
//          i++;
//          return p;
//            return MyList3.this.list[i++];
            try {
              return  MyList3.this.list[i++];
            } catch(Exception e) {
              throw new NoSuchElementException();
            }
        }
    };
      return iterator;
    }
}
public interface MyPrinter {
  public void print();
}
import java.nio.file.FileVisitor;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.io.IOException;
import java.nio.file.FileVisitResult;
import java.nio.file.Files;
import java.nio.file.attribute.*;


public class P12_1 {
    public static void main(String[] args) {
        FileVisitor<Path> visitor = new FileVisitor<Path>(){
            int indentcount = 0;
            @Override
            public FileVisitResult postVisitDirectory(Path dir,IOException exc){
                //System.out.println(dir);
                indentcount--;
                return FileVisitResult.CONTINUE;
            }
            @Override
            public FileVisitResult preVisitDirectory(Path dir,BasicFileAttributes attrs){
                System.out.println(indentcounter()+dir.getFileName()+"(dir)");
                indentcount++;
                return FileVisitResult.CONTINUE;
            }
            @Override
            public FileVisitResult visitFile(Path file, BasicFileAttributes attrs){
                System.out.println(indentcounter()+file.getFileName());
                return FileVisitResult.CONTINUE;
            }
            @Override
            public FileVisitResult visitFileFailed(Path file,IOException exc){
                return FileVisitResult.CONTINUE;
            }
            public String indentcounter(){
                int i = 0;
                String str = "";
                while(i != indentcount) {
                    str = str + "   ";
                    i++;
                }
                return str;
            }
        };
        try {
            Files.walkFileTree(Paths.get(".\\"), visitor);
        } catch(IOException e) {
            e.printStackTrace();
        }

    }
}
import java.util.function.Consumer;
import java.util.List;
import java.util.Arrays;
public class P12_2 {
    public static void main(String[] args) {
        Consumer<String> consumer = new Consumer<String>(){
            @Override
            public void accept(String str){
                System.out.println(str);
            }
        };
        List<String> list = Arrays.asList("c","a","b","d");
        list.forEach(consumer);
        list.forEach(e->System.out.println(e));
    }
}
public class P1_1{
  public static void main(String[] args) {
    for (int i = 0;i <args.length ;i++ ) {
      System.out.println(args[i]);
    }
  }
}
public class P2_1{
  public static void main(String[] args) {
    MyPrinter helloPrinter = new HelloPrinter();
    helloPrinter.print();
  }
}
public class P2_2{
  public static void main(String[] args) {
    MyPrinter myprinter = new MyPrinter(){
      @Override
      public void print(){
        System.out.println("Hello World");
      }
    };
    myprinter.print();
  }
}
import java.util.List;
import java.util.Arrays;

public class P2_3{
  public static void main(String[] args) {
    List<Integer> list = Arrays.asList(1, 2, 0, 11, 4);
    for (int i = 0;i < list.size() ; i++) {
      System.out.println(list.get(i));
    }
    for (Integer number: list) {
      System.out.println(number);
    }
    sort(list);
  }
  public static void sort(List<Integer> list){
    for (int p = 0;p < list.size()-1; p++) {
      for(int i = 0; i < p; i++){
      if (list.get(i) < list.get(i+1)) {
        Integer a = list.get(i);
        list.set(i, list.get(i + 1));
        list.set(i + 1, a);
        }
      }
    }
  }


}
import java.util.List;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
public class P2_4{
  public static void main(String[] args) {
      List<String> list = Arrays.asList("1","2","0","11","4");
      Collections.sort(list);
      for (String number: list) {
        System.out.println(number);
      }
      // MyComparator myComparator = new MyComparator();
      // Collections.sort(list,myComparator);
      // for (String number: list) {
      //   System.out.println(number);
      // }
      Comparator<String> myComparator = new Comparator<String>(){
        public int compare(String number1, String number2){
          Integer a = Integer.parseInt(number1);
          Integer b = Integer.parseInt(number2);
          return a.compareTo(b);
        }
      };
      Collections.sort(list,myComparator);
      for (String number: list) {
        System.out.println(number);
      }

  }
}
public class P4_1{
    public static void main(String[] args) {
        Member member1 = new Member("16JK209","ì˙çÇóCç∆",Gender.MALE);
        Member member2 = new Member("15JK121","ç≤ì°„ƒëæ",Gender.MALE);
        Member member3 = new Member("18JKM27","êXâ∫íqéj",Gender.MALE);
        System.out.println(member1);
    }

}
import java.util.ArrayList;
import java.util.List;
import java.util.Collections;
import java.util.Comparator;
public class P4_2{
    public static void main(String[] args) {
        List<Member> list = new ArrayList<>();
        list.add(new Member("18jkm03","ebihara",Gender.FEMALE));
        list.add(new Member("18jkm13","kondou",Gender.MALE));
        list.add(new Member("00ID00","miya",Gender.MALE));
        list.add(new Member("00IE00","kohama",Gender.MALE));
        list.add(new Member("17jkm16","nishigaki",Gender.MALE));
        Collections.sort(list);
        // for (Member m: list) {
        //     System.out.println(m);
        // }
        Comparator<Member> myComparator = new Comparator<Member>(){
            @Override
            public int compare(Member m1, Member m2){
                String a = m1.getName();
                String b = m2.getName();
                return a.compareTo(b);
            }
        };
        Collections.sort(list, myComparator);
        for (Member m: list) {
            System.out.println(m);
        }
        Collections.sort(list, new Comparator<Member>(){
            @Override
            public int compare(Member m1,Member m2){
                return m1.getGender().compareTo(m2.getGender());
            }
        });


        // for(Member m:list){
        //     System.out.println(m);
        // }
        System.out.println();
        list.sort((o1,o2) -> o1.getName().compareTo(o2.getName()));
        list.forEach(e -> System.out.println(e));
        System.out.println();
        list.stream().sorted((o1,o2) -> o1.getName().compareTo(o2.getName())).forEach(System.out::println);
        // for (Member m: list) {
        //     System.out.println(m);
        // }
    }
}
import java.util.ArrayList;
import java.util.Collections;

public class P5_1 {
    private static ArrayList <String> list = new ArrayList <>();
    static {
        list.add("album");
        list.add("bag");
        list.add("cherry");
        list.add("dish");
        list.add("eye");
        list.add("face");
        list.add("girl");
        list.add("hair");
        list.add("ice cleam");
        list.add("jacket");
    }
    public static void main(String[] args)
    {
        //        System.out.println(find1(null));
        System.out.println(find4("hair"));
    }

    public static boolean find1(String s)
    {
        for (int i = 0; i < list.size(); i++) {
            //            System.out.println(list.get(i));
            if (list.get(i).equals(s)) {
                return true;
            }
        }

        return false;
    }

    public static boolean find2(String s)
    {
        if (list.indexOf(s) != -1) {
            return true;
        }

        return false;
    }

    public static boolean find3(String s)
    {
        return list.contains(s);
    }

    public static boolean find4(String s)
    {
        if (s == null || list.size() == 0) {
            return false;
        }

        return Collections.binarySearch(list, s) != -1;
    }

    public static boolean find5(String s)
    {
        if (s == null || list.size() == 0) {
            return false;
        }

        return list.get(s.charAt(0) - 'a').equals(s);
    }
}
import java.util.ArrayList;
import java.util.Collections;

public class P5_2 {
    private static ArrayList <Member> list = new ArrayList <>();
    static {
        list.add(new Member("00IE00", "miya", Gender.MALE));
        list.add(new Member("00ID00", "kohama", Gender.MALE));
        list.add(new Member("14JKM17", "horikawa", Gender.FEMALE));
        list.add(new Member("14JKM13", "harakawa", Gender.MALE));
        list.add(new Member("14JKM18", "matsui", Gender.MALE));
        Collections.sort(list);
    }
    public static void main(String[] args)
    {
        System.out.println(find1("00IE00"));
    }

    public static boolean find(String id)
    {
        for (int i = 0; i < list.size(); i++) {
            // System.out.println(list.get(i));
            if (list.get(i).getId().equals(id)) {
                return true;
            }
        }

        return false;
    }

    public static boolean find1(String id)
    {
        return Collections.binarySearch(list, new Member(id, null, null)) >= 0;
    }
}
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Set;

public class P5_3 {
    private static HashMap <String, Member> map = new HashMap <>();
    static {
        ArrayList <Member> list = new ArrayList <>();
        list.add(new Member("00IE00", "miya", Gender.MALE));
        list.add(new Member("00ID00", "kohama", Gender.MALE));
        list.add(new Member("14JKM17", "horikawa", Gender.FEMALE));
        list.add(new Member("14JKM13", "harakawa", Gender.MALE));
        list.add(new Member("14JKM18", "matsui", Gender.MALE));

        for (Member member : list) {
            map.put(member.getId(), member);
        }
    }
    public static void main(String[] args)
    {
        // System.out.println(find("00ID00"));
        System.out.println(map.values());

        List <String> keys = new ArrayList <>(map.keySet());
        Collections.sort(keys);
        for (String id : keys) {
            System.out.println(map.get(id));
        }
        // ArrayList<Member> list = new ArrayList<>();
        // list.addAll(map.values());
        // Collections.sort(list);
        // for (int i = 0;i < list.size() ;i++ ) {
        //     System.out.println(list.get(i));
        // }
    }

    public static boolean find(String id)
    {
        return map.containsKey(id);
    }
}
public class P8_1{
    public static void main(String[] args) {
        A a1 = new A(1);
        A a2 = a1.clone();
        a1.i = 2;
        System.out.println(a1.i);
        System.out.println(a2.i);
    }
}
public class P8_2{
    public static void main(String[] args) {
        B b1 = new B(1);
        B b2 = b1.clone();
        b1.i = 2;
        System.out.println(b1.i);
        System.out.println(b2.i);
    }
}
public class P8_3{
    public static void main(String[] args) {
        C c1 = new C(1);
        C c2 = c1.clone();
        c1.b.i = 2;
        System.out.println(c1.getValue());
        System.out.println(c2.getValue());
    }
}
import java.io.file;
import java.util.Properties;


public class PB8_1 {
    public static void main(String[] args) {
        Properties properties = new Properties();
        properties.setProperty("id","0");
        properties.setProperty("score","1");
        properties.setProperty("gender","2");

        File file = new File("f.conf.xml");

        try (OuputStream os = new FileOutputStream(file)) {
            properties.storeToXML(os,"ê›íËÉtÉ@ÉCÉã");
        } catch(Exception e) {

        }
    }
}
public class PB8_2{
    public static void main(String[] args) {
        Properties properties = new Properties();
        File file = new File("f.conf.xml");
        try (InputStream in = new FileImputSteram(file)){
            properties.loadFromXML(in);
        } catch(Exception e) {
        }
        System.out.print(properties.getProperty("id"+ "" );
        System.out.print(properties.getProperty("score") + " ");
        System.out.println(properties.getProperty("gender"));
    }
}
import java.nio.file.Paths;
import java.util.List;

public class PBL11_1 {
    public static void main(String[] args) {
        List<Member> members = MemberUtil.getList(Paths.get("member.csv"));
        for (Member member:members) {
            System.out.println(member.getId()+" "+ member.getName());
            System.out.println(member.getGender()+" "+member.getPoint());
        }
    }
}
public class PBL1_1{
  public static void main (String[] args) {

    // if (args.length == 0) {
    //   System.out.println(".");
    // }else{
    //   System.out.println(args[0]);
    // }

try {
  System.out.println(args[0]);
} catch(Exception e) {
  System.out.println(".");
}

  }
}
import java.util.Arrays;
import java.util.List;
import java.util.Iterator;
public class R3_1{
  public static void main(String[] args) {
    List<Integer> list = Arrays.asList(3,2,1);
    for (Iterator<Integer> ite = list.iterator();ite.hasNext() ; ) {
      Integer i = ite.next();
      System.out.println(i);
    }
    for (Integer integer : list) {
      System.out.println(integer);
    }
  }
}
import java.util.Iterator;
public class R3_2{
  public static void main(String[] args) {
    MyList list = new MyList();
    for (Iterator<Integer> ite = list.iterator();ite.hasNext(); ) {
      Integer i = ite.next();
      System.out.println(i);
    }
    for (Integer integer : new MyList3()) {
      System.out.println(integer);
    }
  }
}
public enum Gender {
    MALE,FEMALE;
}
public class Member {
    private String id;
    private String name;
    private Gender gender;
    private int point;

    public Member(String id,String name, Gender gender){
        this.id = id;
        this.name = name;
        this.gender = gender;
    }
    public String getName(){
        return this.name;
    }

    public String getId(){
        return this.id;
    }

    public Gender getGender(){
        return this.gender;
    }

    public int getPoint(){
        return this.point;
    }

    public void setPoint(int point){
        this.point = point;
    }
}
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;


public class MemberUtil {
    public static List<Member> getList(Path path,int id,int name,int gender,int score){
        List<String> lines = null;
        List<Member> members = new ArrayList<Member>();
        try {
            lines = Files.readAllLines(path, Charset.forName("Shift_JIS"));
        } catch(Exception e) {
            System.out.println("ex");
        }
        for (String line:lines) {
            String[] data = line.split(",");
            members.add(new Member(data[id],data[name],Gender.valueOf(data[gender])));
            Member member = members.get(members.size()-1);
            member.setPoint(Integer.valueOf(data[score]));
        }
        return members;
    }

}
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class MemberUtil2 {
    public static List<Member> getList(Path path){
        List<String> lines = null;
        List<Member> members = new ArrayList<Member>();
        try {
            lines = Files.readAllLines(path, Charset.forName("Shift_JIS"));
        } catch(Exception e) {
            System.out.println("ex");
        }
        // for (String line:lines) {
        //     String[] data = line.split(",");
        //     members.add(new Member(data[0],data[1],Gender.valueOf(data[2])));
        //     Member member = members.get(members.size()-1);
        //     member.setPoint(Integer.valueOf(data[3]));
        // }
        String str = lines.get(0);
        String[] title = str.split(",");
        System.out.println(lines.get(0));
        //String[] data.sprit(",");
        int id=0,name=1,gender=2,point=3;


        for (int i = 0; i < 4; i++ ) {
            if (title[i].matches("........")) {
                id = i;
            }else if (title[i].equals("MALE") ||title[i].equals ("FEMALE")) {
                gender = i;
            }else if (title[i].matches("^\\d{1,3}$")) {
                point = i;
            }else{
                name = i;
            }
        }


        for (String line:lines) {
            String[] data = line.split(",");
            members.add(new Member(data[id],data[name],Gender.valueOf(data[gender])));
            Member member = members.get(members.size()-1);
            member.setPoint(Integer.valueOf(data[point]));
        }
        return members;
    }

}
import java.io.File;
import java.util.Properties;
import java.io.OutputStream;
import java.io.FileOutputStream;
public class PB8_1 {
    public static void main(String[] args) {
        Properties properties = new Properties();
        properties.setProperty("id","0");
        properties.setProperty("score","1");
        properties.setProperty("gender","2");

        File file = new File("f.conf.xml");

        try (OutputStream os = new FileOutputStream(file)) {
            properties.storeToXML(os,"ê›íËÉtÉ@ÉCÉã");
        } catch(Exception e) {

        }
    }
}
import java.util.*;
import java.io.*;
public class PB8_2 {
    public static void main(String[] args) {
        Properties properties = new Properties();
        File file = new File("f.conf.xml");
        try (InputStream in = new FileInputStream(file)) {
            properties.loadFromXML(in);
        } catch(Exception e) {
            e.printStackTrace();
        }
        System.out.print(properties.getProperty("id"+ ""));
        System.out.print(properties.getProperty("score" + ""));
        System.out.println(properties.getProperty("gender"));
    }
}
import java.util.*;
import java.io.*;
import java.nio.file.Paths;
import java.util.List;
public class PB8_3 {
    public static void main(String[] args) {
        Properties properties = new Properties();
        File file = new File("f.conf.xml");
        try (InputStream in = new FileInputStream(file)) {
            properties.loadFromXML(in);
        } catch(Exception e) {
            e.printStackTrace();
        }
        int id = Integer.parseInt(properties.getProperty("id"+ ""));
        int score = Integer.parseInt(properties.getProperty("score" + ""));
        int gender = Integer.parseInt(properties.getProperty("gender"));
        List<Member> members = MemberUtil.getList(Paths.get("member.csv"),id,1,gender,score);
        for (Member member:members) {
            System.out.println(member.getId()+" "+ member.getName());
            System.out.println(member.getGender()+" "+member.getPoint());
        }
    }
}
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class PB9_1 {
    public static void main(String[] args) {
        List<String> lines = null;
        try {
            lines = Files.readAllLines(Paths.get("member.csv"), Charset.forName("Shift_JIS"));
        } catch(Exception e) {
            System.out.println("ex");
        }
        List<Member> members = new ArrayList<Member>();
        for (String line:lines) {
            String[] data = line.split(",");
            members.add(new Member(data[0],data[1],Gender.valueOf(data[2])));
            Member member = members.get(members.size()-1);
            member.setPoint(Integer.valueOf(data[3]));
        }
        for (Member m: members) {
            System.out.println(m.getName()+" " +m.getId()+" "+ m.getGender()+ " "+m.getPoint() );

        }


    }
}
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;

public class PB9_2 {
    public static void main(String[] args) {
        List<String> lines = null;
        try {
            lines = Files.readAllLines(Paths.get("member.csv"), Charset.forName("Shift_JIS"));
        } catch(Exception e) {
            System.out.println("ex");
        }
        List<Member> members = new ArrayList<Member>();
        int sum = 0;
        for (String line:lines) {
            String[] data = line.split(",");
            members.add(new Member(data[0],data[1],Gender.valueOf(data[2])));
            Member member = members.get(members.size()-1);
            member.setPoint(Integer.valueOf(data[3]));
            sum = sum + Integer.valueOf(data[3]);
        }
        for (Member m: members) {
            System.out.println(m.getName()+" " +m.getId()+" "+ m.getGender()+ " "+m.getPoint() );
        }
        System.out.println("average : "+sum/members.size());

    }
}
import java.nio.file.Paths;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
public class PBL11_1 {
    public static void main(String[] args) {
        int name = 0;
        Map<String,Integer> map = new HashMap<String,Integer>();
        map.put("id",0);
        map.put("name",1);
        map.put("gender",3);
        map.put("score",2);
        List<Member> members = MemberUtil.getList(Paths.get("member2.csv"),map.get("id"),map.get("name"),map.get("gender"),map.get("score"));
        for (Member member:members) {
            System.out.println(member.getId()+" "+ member.getName());
            System.out.println(member.getGender()+" "+member.getPoint());
        }
    }
}
import java.nio.file.Paths;
import java.util.List;
import java.util.HashMap;
import java.util.Map;
public class PBL11_2 {
    public static void main(String[] args) {
        List<Member> members = MemberUtil2.getList(Paths.get("member.csv"));
        for (Member member:members) {
            System.out.println(member.getId()+" "+ member.getName());
            System.out.println(member.getGender()+" "+member.getPoint());
        }
    }
}

